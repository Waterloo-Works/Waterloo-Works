@tailwind base;
@tailwind components;
@tailwind utilities;

/* Design System: type + tokens */

/* Font utility aliases kept for backwards compatibility */
.font-title, .font-header {
  font-family: "205 Tf Exposure 0", Georgia, serif;
}

.font-body {
  font-family: Neuehaasgroteskdisplay, Arial, sans-serif;
}

@layer base {
  :root {
    /* === BASE COLORS === */
    --base-bg: 45 10% 96%;         /* #F6F5F2 - Warm beige */
    --base-surface: 0 0% 100%;     /* #FFFFFF - White */
    --base-border: 45 10% 88%;     /* #E3E2DD - Subtle border */
    --base-hover: 45 10% 92%;      /* #EAEAE7 - Hover state */

    --dark-bg: 28 12% 11%;         /* #211E1A - Softer warm charcoal */
    --dark-surface: 26 14% 16%;    /* #2E2823 - Warm card surface */
    --dark-border: 24 8% 23%;      /* #3E3935 - Subtle refined border */
    --dark-hover: 26 12% 18%;      /* #322D28 - Subtle warm muted */

    --text-main: 0 0% 4%;          /* #0A0A0A - Almost black */
    --text-subtle: 0 0% 32%;       /* #525252 - Medium gray */
    --text-inverse: 0 0% 100%;     /* #FFFFFF - White */
    --text-warm-light: 28 22% 92%; /* #F0E8E0 - Brighter warm beige */
    --text-warm-muted: 28 18% 68%; /* #BEB0A0 - Brighter warm gray */

    --accent-terracotta: 18 32% 65%; /* #CDA285 - Brighter terracotta */
    --accent-golden: 32 22% 52%;     /* #A08E79 - Brighter golden brown */

    /* === SEMANTIC TOKENS === */
    /* Light mode defaults */
    --background: 45 10% 96%;         /* base-bg */
    --foreground: 0 0% 4%;            /* text-main */

    --card: 0 0% 100%;                /* base-surface */
    --card-foreground: 0 0% 4%;       /* text-main */

    --popover: 0 0% 100%;             /* base-surface */
    --popover-foreground: 0 0% 4%;    /* text-main */

    --primary: 0 0% 4%;               /* text-main */
    --primary-foreground: 0 0% 100%;  /* text-inverse */

    --secondary: 0 0% 32%;            /* text-subtle */
    --secondary-foreground: 0 0% 100%; /* text-inverse */

    --muted: 45 10% 92%;              /* base-hover */
    --muted-foreground: 0 0% 40%;     /* darker gray for better contrast */

    --accent: 0 0% 4%;                /* text-main */
    --accent-foreground: 0 0% 100%;   /* text-inverse */

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 100%;  /* text-inverse */

    --border: 45 10% 88%;             /* base-border */
    --input: 45 10% 88%;              /* base-border */
    --ring: 0 0% 4%;                  /* text-main */

    --chart-1: 0 0% 4%;               /* text-main - darkest */
    --chart-2: 0 0% 32%;              /* text-subtle - medium */
    --chart-3: 0 0% 64%;              /* light gray */
    --chart-4: 45 10% 88%;            /* base-border - lighter */
    --chart-5: 45 10% 92%;            /* base-hover - lightest */

    --radius: 0.5rem;

    --sidebar-background: 0 0% 100%;      /* base-surface */
    --sidebar-foreground: 0 0% 4%;        /* text-main */
    --sidebar-primary: 0 0% 4%;           /* text-main */
    --sidebar-primary-foreground: 0 0% 100%; /* text-inverse */
    --sidebar-accent: 45 10% 92%;         /* base-hover */
    --sidebar-accent-foreground: 0 0% 4%; /* text-main */
    --sidebar-border: 45 10% 88%;         /* base-border */
    --sidebar-ring: 0 0% 4%;              /* text-main */

    /* Grid overlay variables. Adjust half container width per breakpoint. */
    --container-half: 28rem;       /* ~max-w-4xl / 2 for home */
    --rails-shift: 6rem;           /* extra distance pushing rails toward edges */
    --rails-margin: 48px;          /* keep rails inside viewport by this margin */
    /* Never let the rails go beyond the viewport edges */
    --rails-half: clamp(18rem, calc(var(--container-half) + var(--rails-shift)), calc(50vw - var(--rails-margin)));
  }
  .dark {
    /* Dark mode: Warm Japanese rustic with muted earthy tones */
    /* Inspired by aged wood, clay pottery, and washi paper */
    --background: 28 12% 11%;         /* #211E1A - Softer warm charcoal */
    --foreground: 28 22% 92%;         /* #F0E8E0 - Brighter warm beige for better contrast */

    --card: 26 14% 16%;               /* #2E2823 - Warm card surface */
    --card-foreground: 28 22% 92%;    /* #F0E8E0 - Brighter warm beige */

    --popover: 26 14% 16%;            /* #2E2823 - Warm card surface */
    --popover-foreground: 28 22% 92%; /* #F0E8E0 - Brighter warm beige */

    --primary: 18 32% 65%;            /* #CDA285 - Brighter terracotta for contrast */
    --primary-foreground: 28 12% 11%; /* #211E1A - Softer warm charcoal */

    --secondary: 32 22% 52%;          /* #A08E79 - Brighter golden brown */
    --secondary-foreground: 28 12% 11%; /* #211E1A - Softer warm charcoal */

    --muted: 26 12% 18%;              /* #322D28 - Subtle warm muted */
    --muted-foreground: 28 18% 68%;   /* #BEB0A0 - Brighter warm gray for better contrast */

    --accent: 26 12% 18%;             /* #322D28 - Subtle warm muted */
    --accent-foreground: 28 22% 92%;  /* #F0E8E0 - Brighter warm beige */

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 28 22% 92%; /* #F0E8E0 - Brighter warm beige */

    --border: 24 8% 23%;              /* #3E3935 - Subtle refined border */
    --input: 24 8% 23%;               /* #3E3935 - Subtle refined border */
    --ring: 18 32% 65%;               /* #CDA285 - Brighter terracotta */

    --chart-1: 18 32% 65%;            /* #CDA285 - Brighter terracotta */
    --chart-2: 32 22% 52%;            /* #A08E79 - Brighter golden brown */
    --chart-3: 28 18% 68%;            /* #BEB0A0 - Brighter warm gray */
    --chart-4: 26 12% 18%;            /* #322D28 - Subtle warm muted */
    --chart-5: 26 14% 16%;            /* #2E2823 - Warm card surface */

    --sidebar-background: 24 16% 13%; /* #26211C - Deeper warm sidebar */
    --sidebar-foreground: 28 22% 92%; /* #F0E8E0 - Brighter warm beige for better contrast */
    --sidebar-primary: 18 32% 65%;    /* #CDA285 - Brighter terracotta */
    --sidebar-primary-foreground: 24 16% 13%; /* #26211C - Deeper warm sidebar */
    --sidebar-accent: 26 12% 18%;     /* #322D28 - Subtle warm hover */
    --sidebar-accent-foreground: 28 22% 92%; /* #F0E8E0 - Brighter warm beige */
    --sidebar-border: 22 8% 20%;      /* #362F2A - Refined sidebar border */
    --sidebar-ring: 18 32% 65%;       /* #CDA285 - Brighter terracotta */
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    /* Body typography */
    letter-spacing: .01em;
    font-family: Neuehaasgroteskdisplay, Arial, sans-serif;
    font-size: 1rem;
    line-height: 1.2;
  }
  /* Spec: heading styles */
  .heading-style-h2 {
    letter-spacing: -.04em;
    font-family: "205 Tf Exposure 0", Georgia, sans-serif;
    font-size: 3rem;
    font-weight: 400;
    line-height: 1;
  }
  h3 {
    letter-spacing: -.02em;
    margin-top: 0;
    margin-bottom: 0;
    font-family: "205 Tf Exposure 0", Georgia, sans-serif;
    font-size: 2.25rem;
    font-weight: 400;
    line-height: 1;
  }
}

/* Hide the global footer when the shell layout renders its own footer.
   Use general-sibling so intervening elements (e.g., toasters) don't break it. */
.shell-layout ~ footer { display: none; }

@layer utilities {
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* Subtle decorative line grid inspired by radar/technical UI.
     - grid-overlay-vert: wide vertical columns with a stronger center line.
     - grid-overlay-ticks: short tick marks along the top. */
  .grid-overlay-vert {
    background-image:
      linear-gradient(90deg,
        transparent calc(50% - 0.5px),
        rgb(227 226 221 / 0.9) calc(50% - 0.5px),
        rgb(227 226 221 / 0.9) calc(50% + 0.5px),
        transparent calc(50% + 0.5px)
      ),
      repeating-linear-gradient(90deg,
        rgb(227 226 221 / 0.35) 0,
        rgb(227 226 221 / 0.35) 1px,
        transparent 1px,
        transparent 80px
      );
    background-repeat: no-repeat, repeat;
    background-position: center;
  }

  .dark .grid-overlay-vert {
    background-image:
      linear-gradient(90deg,
        transparent calc(50% - 0.5px),
        rgb(190 176 160 / 0.15) calc(50% - 0.5px),
        rgb(190 176 160 / 0.15) calc(50% + 0.5px),
        transparent calc(50% + 0.5px)
      ),
      repeating-linear-gradient(90deg,
        rgb(190 176 160 / 0.08) 0,
        rgb(190 176 160 / 0.08) 1px,
        transparent 1px,
        transparent 80px
      );
  }

  .grid-overlay-ticks {
    position: absolute;
    inset-inline: 0;
    /* place ticks just below the header/hero divider line */
    top: var(--ticks-top-offset, 10px);
    /* three staggered layers to simulate candle clusters ("candlelight") */
    background-image:
      linear-gradient(90deg, rgb(227 226 221 / 0.75), rgb(227 226 221 / 0.75) 1px, transparent 1px),
      linear-gradient(90deg, rgb(227 226 221 / 0.65), rgb(227 226 221 / 0.65) 1px, transparent 1px),
      linear-gradient(90deg, rgb(227 226 221 / 0.55), rgb(227 226 221 / 0.55) 1px, transparent 1px);
    background-size: 72px 12px, 80px 8px, 64px 10px;
    background-repeat: repeat-x;
    background-position: 0 2px, 18px 4px, 40px 1px;
  }

  .dark .grid-overlay-ticks {
    background-image:
      linear-gradient(90deg, rgb(190 176 160 / 0.12), rgb(190 176 160 / 0.12) 1px, transparent 1px),
      linear-gradient(90deg, rgb(190 176 160 / 0.09), rgb(190 176 160 / 0.09) 1px, transparent 1px),
      linear-gradient(90deg, rgb(190 176 160 / 0.06), rgb(190 176 160 / 0.06) 1px, transparent 1px);
  }

  .grid-overlay-ticks-bottom {
    position: absolute;
    inset-x: 0;
    bottom: var(--hairline-bottom, 8px);
    height: 6px;
    pointer-events: none;
    background-image:
      linear-gradient(90deg, rgb(227 226 221 / 0.75), rgb(227 226 221 / 0.75) 1px, transparent 1px),
      linear-gradient(90deg, rgb(227 226 221 / 0.65), rgb(227 226 221 / 0.65) 1px, transparent 1px),
      linear-gradient(90deg, rgb(227 226 221 / 0.55), rgb(227 226 221 / 0.55) 1px, transparent 1px);
    background-size: 72px 12px, 80px 8px, 64px 10px;
    background-repeat: repeat-x;
    /* position ticks just above the bottom hairline */
    background-position: 0 calc(100% - 14px), 18px calc(100% - 10px), 40px calc(100% - 12px);
  }

  .dark .grid-overlay-ticks-bottom {
    background-image:
      linear-gradient(90deg, rgb(190 176 160 / 0.12), rgb(190 176 160 / 0.12) 1px, transparent 1px),
      linear-gradient(90deg, rgb(190 176 160 / 0.09), rgb(190 176 160 / 0.09) 1px, transparent 1px),
      linear-gradient(90deg, rgb(190 176 160 / 0.06), rgb(190 176 160 / 0.06) 1px, transparent 1px);
  }

  /* Faint horizontal hairline across the bottom */
  .grid-overlay-hairline-bottom {
    position: absolute;
    inset-x: 0;
    bottom: 0;
    height: 1px;
    background-color: rgb(255 255 255 / 0.26);
    box-shadow: 0 -0.5px 0 rgb(0 0 0 / 0.15) inset;
    z-index: 1;
    pointer-events: none;
  }

  .dark .grid-overlay-hairline-bottom {
    background-color: rgb(190 176 160 / 0.08);
    box-shadow: 0 -0.5px 0 rgb(0 0 0 / 0.3) inset;
  }

  /* Two side rails aligned with responsive content width.
     Left at calc(50% - var(--container-half)), right at calc(50% + var(--container-half)). */
  .grid-overlay-sides {
    position: absolute;
    inset: 0;
    background-repeat: no-repeat;
    background-image:
      linear-gradient(90deg,
        transparent calc(50% - var(--rails-half)),
        rgb(227 226 221 / 0.95) calc(50% - var(--rails-half)),
        rgb(227 226 221 / 0.95) calc(50% - var(--rails-half) + 1px),
        transparent calc(50% - var(--rails-half) + 1px)
      ),
      linear-gradient(90deg,
        transparent calc(50% + var(--rails-half)),
        rgb(227 226 221 / 0.95) calc(50% + var(--rails-half)),
        rgb(227 226 221 / 0.95) calc(50% + var(--rails-half) + 1px),
        transparent calc(50% + var(--rails-half) + 1px)
      );
    background-position: center;
  }

  .dark .grid-overlay-sides {
    background-image:
      linear-gradient(90deg,
        transparent calc(50% - var(--rails-half)),
        rgb(190 176 160 / 0.15) calc(50% - var(--rails-half)),
        rgb(190 176 160 / 0.15) calc(50% - var(--rails-half) + 1px),
        transparent calc(50% - var(--rails-half) + 1px)
      ),
      linear-gradient(90deg,
        transparent calc(50% + var(--rails-half)),
        rgb(190 176 160 / 0.15) calc(50% + var(--rails-half)),
        rgb(190 176 160 / 0.15) calc(50% + var(--rails-half) + 1px),
        transparent calc(50% + var(--rails-half) + 1px)
      );
  }

  /* Small circular nodes where the rails intersect the header hairline */
  .grid-overlay-nodes {
    position: absolute;
    inset-inline: 0;
    top: calc(var(--hairline-top, 64px) - 5px); /* align circle center with hairline */
    height: 10px;
    pointer-events: none;
    background-image:
      radial-gradient(circle 6px at center, rgb(255 255 255 / 0.95) 0, rgb(255 255 255 / 0.95) 2.5px, rgb(255 255 255 / 0.35) 2.5px, rgb(255 255 255 / 0.35) 3.5px, transparent 3.5px),
      radial-gradient(circle 6px at center, rgb(255 255 255 / 0.95) 0, rgb(255 255 255 / 0.95) 2.5px, rgb(255 255 255 / 0.35) 2.5px, rgb(255 255 255 / 0.35) 3.5px, transparent 3.5px);
    background-repeat: no-repeat, no-repeat;
    background-size: 10px 10px, 10px 10px;
    background-position: calc(50% - var(--rails-half)) center, calc(50% + var(--rails-half)) center;
  }

  .dark .grid-overlay-nodes {
    background-image:
      radial-gradient(circle 6px at center, rgb(190 176 160 / 0.2) 0, rgb(190 176 160 / 0.2) 2.5px, rgb(190 176 160 / 0.08) 2.5px, rgb(190 176 160 / 0.08) 3.5px, transparent 3.5px),
      radial-gradient(circle 6px at center, rgb(190 176 160 / 0.2) 0, rgb(190 176 160 / 0.2) 2.5px, rgb(190 176 160 / 0.08) 2.5px, rgb(190 176 160 / 0.08) 3.5px, transparent 3.5px);
  }

  .grid-overlay-nodes-bottom {
    position: absolute;
    inset-inline: 0;
    bottom: calc(var(--hairline-bottom, 8px) - 5px); /* align circle center with hairline */
    height: 10px;
    pointer-events: none;
    background-image:
      radial-gradient(circle 6px at center, rgb(255 255 255 / 0.95) 0, rgb(255 255 255 / 0.95) 2.5px, rgb(255 255 255 / 0.35) 2.5px, rgb(255 255 255 / 0.35) 3.5px, transparent 3.5px),
      radial-gradient(circle 6px at center, rgb(255 255 255 / 0.95) 0, rgb(255 255 255 / 0.95) 2.5px, rgb(255 255 255 / 0.35) 2.5px, rgb(255 255 255 / 0.35) 3.5px, transparent 3.5px);
    background-repeat: no-repeat, no-repeat;
    background-size: 10px 10px, 10px 10px;
    background-position: calc(50% - var(--rails-half)) center, calc(50% + var(--rails-half)) center;
  }

  .dark .grid-overlay-nodes-bottom {
    background-image:
      radial-gradient(circle 6px at center, rgb(190 176 160 / 0.2) 0, rgb(190 176 160 / 0.2) 2.5px, rgb(190 176 160 / 0.08) 2.5px, rgb(190 176 160 / 0.08) 3.5px, transparent 3.5px),
      radial-gradient(circle 6px at center, rgb(190 176 160 / 0.2) 0, rgb(190 176 160 / 0.2) 2.5px, rgb(190 176 160 / 0.08) 2.5px, rgb(190 176 160 / 0.08) 3.5px, transparent 3.5px);
  }

  /* Shimmer sweep for hero sections */
  @keyframes ww-shimmer {
    from { transform: translate3d(-60%, var(--shimmer-ty, 0%), 0) rotateZ(var(--shimmer-rot, -12deg)); }
    to   { transform: translate3d(160%, var(--shimmer-ty, 0%), 0) rotateZ(var(--shimmer-rot, -12deg)); }
  }

  .ww-shimmer {
    position: absolute;
    top: -10%;
    bottom: -10%;
    left: 0;
    width: 34%;
    pointer-events: none;
    background: linear-gradient(100deg,
      rgba(255 255 255 / 0) 0%,
      rgba(255 255 255 / 0.08) 42%,
      rgba(255 255 255 / 0.16) 50%,
      rgba(255 255 255 / 0.08) 58%,
      rgba(255 255 255 / 0) 100%
    );
    mix-blend-mode: screen;
    filter: blur(0.4px);
    will-change: transform;
    transform-origin: 50% 50%;
    animation: ww-shimmer var(--shimmer-duration, 8s) linear infinite;
  }

  @media (prefers-reduced-motion: reduce) {
    .ww-shimmer { animation: none; }
  }

  /* Force animation even if the user has reduced motion on (for demos). */
  .ww-shimmer--force {
    animation: ww-shimmer var(--shimmer-duration, 8s) linear infinite !important;
  }

  /* Pendulum shimmer: pivots from the top so the top moves less than the bottom */
  @keyframes ww-pendulum {
    from {
      transform: scaleY(var(--pendulum-scaleY, 1)) rotate(var(--pendulum-from, -16deg)) translateX(-30vw);
    }
    to {
      transform: scaleY(var(--pendulum-scaleY, 1)) rotate(var(--pendulum-to, 16deg)) translateX(30vw);
    }
  }

  .ww-pendulum {
    position: absolute;
    left: 50%;
    top: -12%;
    bottom: -12%;
    width: 38%;
    pointer-events: none;
    background: linear-gradient(90deg,
      rgba(255 255 255 / 0) 0%,
      rgba(255 255 255 / 0.16) 40%,
      rgba(255 255 255 / 0.42) 50%,
      rgba(255 255 255 / 0.16) 60%,
      rgba(255 255 255 / 0) 100%
    );
    mix-blend-mode: screen;
    filter: blur(0.6px);
    transform-origin: 50% 0%; /* pivot at top-center so top travels less */
    will-change: transform;
    transform: scaleY(var(--pendulum-scaleY, 1)) rotate(var(--pendulum-from, -16deg)) translateX(-30vw);
    animation: ww-pendulum var(--pendulum-duration, 10s) ease-in-out infinite alternate;
  }

  /* Mobile tuning: wider beam but softer opacity */
  @media (max-width: 767px) {
    .ww-pendulum { width: 46%; opacity: 0.18; }
  }

  .ww-pendulum--force {
    animation: ww-pendulum var(--pendulum-duration, 10s) ease-in-out infinite alternate !important;
  }

  .ww-pendulum--flip { --pendulum-scaleY: -1; }

  /* Update container half at breakpoints to match max-w usage */
  @media (min-width: 1024px) { /* lg */
    :root { --container-half: 28rem; --rails-shift: 8rem; --rails-margin: 64px; --rails-half: clamp(20rem, calc(var(--container-half) + var(--rails-shift)), calc(50vw - var(--rails-margin))); }
  }
  @media (min-width: 1280px) { /* xl */
    :root { --container-half: 32rem; --rails-shift: 10rem; --rails-margin: 80px; --rails-half: clamp(22rem, calc(var(--container-half) + var(--rails-shift)), calc(50vw - var(--rails-margin))); }
  }
  @media (min-width: 1536px) { /* 2xl */
    :root { --container-half: 36rem; --rails-shift: 12rem; --rails-margin: 96px; --rails-half: clamp(24rem, calc(var(--container-half) + var(--rails-shift)), calc(50vw - var(--rails-margin))); }
  }

  /* Generic shimmer block */
  .shimmer {
    position: relative;
    overflow: hidden;
    background-color: rgb(234 234 231); /* base-hover */
  }
  .shimmer::after {
    content: "";
    position: absolute;
    inset: 0;
    transform: translateX(-100%);
    background: linear-gradient(90deg, transparent, rgba(255,255,255,.65), transparent);
    animation: ww-shimmerline 1.2s infinite;
  }
  @keyframes ww-shimmerline { to { transform: translateX(100%); } }
}

@layer components {
  /* Design system utility classes */
  .ds-card { @apply rounded-2xl border border-border bg-card p-6 shadow-sm transition-colors hover:border-border; }

  .ds-divider { @apply border-t border-border; }

  .ds-chip {
    @apply inline-flex items-center rounded-full px-4 py-2 text-sm font-medium text-foreground transition-all duration-300 ease-out;
    background-image: linear-gradient(to bottom, rgba(255,255,255,0.9), rgba(255,255,255,0.75));
    border: 1px solid rgba(0,0,0,0.08);
    box-shadow: inset 0 1px 0 rgba(255,255,255,0.9), 0 6px 14px -8px rgba(0,0,0,0.35);
  }
  .ds-chip:hover {
    transform: translateY(-1px);
    box-shadow: inset 0 1px 0 rgba(255,255,255,0.95), 0 10px 18px -10px rgba(0,0,0,0.4);
  }
  .ds-chip:active { transform: translateY(0); }

  /* CTA micro-interactions */
  .ds-cta-card {
    position: relative;
    overflow: hidden;
    transform: translateZ(0);
    transition: transform .35s cubic-bezier(.2,.8,.2,1), box-shadow .35s cubic-bezier(.2,.8,.2,1);
  }
  .ds-cta-card:hover { transform: translateY(-2px); }
  .ds-cta-card::before {
    content: "";
    position: absolute;
    inset: -2px;
    pointer-events: none;
    background:
      radial-gradient(120% 80% at 0% 0%, rgba(255,255,255,.25), rgba(255,255,255,0) 55%),
      linear-gradient(180deg, rgba(255,255,255,.12), rgba(255,255,255,0));
    opacity: 0;
    transition: opacity .35s ease;
  }
  .ds-cta-card:hover::before { opacity: .55; }
}

@layer components {
  @media (max-width: 767px) {
    .ds-cta-card { transition: none; }
    .ds-cta-card:hover { transform: none; }
    .ds-cta-card::before { opacity: .25; }
    .ds-chip {
      @apply px-2 py-0.5 text-[11px];
      background-image: linear-gradient(to bottom, rgba(255,255,255,0.85), rgba(255,255,255,0.7));
      border: 1px solid rgba(0,0,0,0.06);
      box-shadow: inset 0 1px 0 rgba(255,255,255,0.85);
    }
    .ds-chip:hover { transform: none; box-shadow: inset 0 1px 0 rgba(255,255,255,0.9); }
  }
}

@layer components {
  /* Shimmer CTA button (scoped) */
  .cta-btn { --transition: .25s; --spark: 1.8s; --speed: 1.2s; --active: 0; --cut: .1em; position: relative; z-index: 3; display: grid; place-items: center; cursor: pointer; user-select: none; padding: .85em 1.2em; border-radius: 100px; white-space: nowrap; text-decoration: none; font-size: .95rem; font-weight: 500; color: inherit; background: radial-gradient(40% 50% at center 100%, hsl(270 0% 72% / .05), transparent), radial-gradient(80% 100% at center 120%, hsl(260 0% 70% / .1), transparent), hsl(260 0% 12%); box-shadow: 0 .05em 0 0 hsl(260 0% 50%) inset, 0 -.05em 0 0 hsl(260 0% 0%) inset; transition: box-shadow var(--transition), transform var(--transition), background var(--transition); }
  .cta-btn { isolation: isolate; }
  .cta-btn .text { translate: 2% -6%; letter-spacing: .01ch; color: rgba(255,255,255,.95); }
  /* Container-style spark: beam travels across the button area */
  .cta-btn .spark__container { position: absolute; inset: 0; overflow: visible; container-type: size; }
  .cta-btn .spark {
    position: absolute; left: 0; top: 0; height: 100cqh; aspect-ratio: 1;
    border-radius: 100px; overflow: visible; padding: 2.5px; /* ring thickness */
    /* Ring mask: show only the outline band */
    -webkit-mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
            mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
    -webkit-mask-composite: xor;
            mask-composite: exclude;
    animation: slide var(--speed) ease-in-out infinite alternate;
  }
  .cta-btn .spark:before { content: ""; position: absolute; inset: -100%; --spread: 90deg; background: conic-gradient(from calc(270deg - (var(--spread) * 0.5)), transparent 0, hsl(0 0% 100% / 1) var(--spread), transparent var(--spread)); translate: 0 0; transform: rotate(0deg); width: auto; aspect-ratio: 1; animation: spin calc(var(--speed) * 2) infinite linear; }
  .cta-btn .spark:after { content: ""; position: absolute; inset: var(--cut); border-radius: 100px; }
  .cta-btn .backdrop { position: absolute; inset: var(--cut); border-radius: 100px; background: radial-gradient(40% 50% at center 100%, hsl(270 0% 72% / .05), transparent), radial-gradient(80% 100% at center 120%, hsl(260 0% 70% / .1), transparent), hsl(260 0% 12%); transition: background var(--transition), opacity var(--transition); }
  /* No hover trick; shimmer runs continuously */
  .cta-btn:is(:hover,:focus-visible) { }
  .cta-btn:is(:active) { transform: scale(.98); }
  @keyframes spin { 0% { rotate: 0deg; } 15%,35% { rotate: 90deg; } 65%,85% { rotate: 270deg; } 100% { rotate: 360deg; } }
  @keyframes slide { to { transform: translate(calc(100cqw - 100%), 0); } }
  @media (max-width: 767px) { .cta-btn { font-size: .9rem; padding: .65em 1em; } }
}

/* Graceful fallback when container queries aren't supported */
@supports not (container-type: size) {
  .cta-btn .spark__container { position: absolute; inset: 0; overflow: visible; }
  .cta-btn .spark { position: absolute; inset: 0; border-radius: 100px; overflow: hidden; mask: linear-gradient(white, transparent 50%); animation: flip calc(var(--spark,1.8s) * 2) infinite steps(2, end); }
  .cta-btn .spark:before { content: ""; position: absolute; width: 200%; aspect-ratio: 1; inset: 0 auto auto 50%; translate: -50% -15%; transform: rotate(-90deg); opacity: calc((var(--active)) + .4); background: conic-gradient(from 0deg, transparent 0 340deg, white 360deg); transition: opacity var(--transition,.25s); animation: rotate var(--spark,1.8s) linear infinite both; }
  @keyframes flip { to { rotate: 360deg; } }
  @keyframes rotate { to { transform: rotate(90deg); } }
}

/* Driver.js custom styles to match design system */
.driver-popover {
  background: hsl(var(--card)) !important;
  color: hsl(var(--foreground)) !important;
  border: 1px solid hsl(var(--border)) !important;
  border-radius: 12px !important;
  padding: 20px !important;
  box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1) !important;
}

.driver-popover-title {
  font-family: '205 Tf Exposure 0', Georgia, serif !important;
  font-size: 18px !important;
  font-weight: 500 !important;
  color: hsl(var(--foreground)) !important;
  margin-bottom: 8px !important;
}

.driver-popover-description {
  font-size: 14px !important;
  color: hsl(var(--muted-foreground)) !important;
  line-height: 1.5 !important;
}

.driver-popover-progress-text {
  font-size: 13px !important;
  color: hsl(var(--muted-foreground)) !important;
}

.driver-popover-next-btn,
.driver-popover-prev-btn,
.driver-popover-close-btn {
  background: hsl(var(--primary)) !important;
  color: hsl(var(--primary-foreground)) !important;
  border: none !important;
  padding: 10px 20px !important;
  border-radius: 8px !important;
  font-size: 14px !important;
  font-weight: 500 !important;
  transition: all 0.2s !important;
}

.driver-popover-next-btn:hover,
.driver-popover-close-btn:hover {
  background: hsl(var(--primary) / 0.9) !important;
}

.driver-popover-prev-btn {
  background: transparent !important;
  color: hsl(var(--muted-foreground)) !important;
}

.driver-popover-prev-btn:hover {
  background: hsl(var(--muted)) !important;
  color: hsl(var(--foreground)) !important;
}

.driver-overlay {
  background: rgba(0, 0, 0, 0.5) !important;
}
